<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunting.client.mapper.Client.WithdrawRecordMapper">
    <resultMap id="BaseResultMap" type="com.yunting.client.entity.WithdrawRecord">
        <id column="withdraw_record_id" jdbcType="BIGINT" property="withdrawRecordId"/>
        <id column="player_id" jdbcType="BIGINT" property="playerId"/>
        <result column="wx_nickname" jdbcType="VARCHAR" property="wxNickname"/>
        <result column="package_name" jdbcType="VARCHAR" property="packageName"/>
        <result column="withdraw_status" jdbcType="CHAR" property="withdrawStatus"/>
        <result column="withdraw_money" jdbcType="DECIMAL" property="withdrawMoney"/>
        <result column="return_money" jdbcType="DECIMAL" property="returnMoney"/>
        <result column="withdraw_time" jdbcType="TIMESTAMP" property="withdrawTime"/>
        <result column="withdraw_percentage_now" jdbcType="VARCHAR" property="withdrawPercentageNow"/>
    </resultMap>

    <insert id="insertWithdrawRecord">
        insert into withdraw_record
        (withdraw_record_id, player_id,
         wx_nickname, package_name,
         withdraw_status, withdraw_money,
         return_money, withdraw_time, withdraw_percentage_now)
        values (#{withdrawRecordId}, #{playerId},
                #{wxNickname}, #{packageName},
                #{withdrawStatus}, #{withdrawMoney},
                #{returnMoney}, #{withdrawTime}, #{withdrawPercentageNow})
    </insert>

    <update id="updatePayStatus">
        update withdraw_record
        set withdraw_status = #{status}
        where withdraw_record_id = #{id}
    </update>

    <select id="getWithdrawSetting" resultType="com.yunting.client.entity.setting.WithdrawSetting">
        select withdraw_count, withdraw_nojudge_money, withdraw_percentage, package_name
        from behind_manage.withdraw_setting
        where package_name = (select package_name from behind_manage.application where application_id = #{gameId})
    </select>

    <select id="getTodayWithdrawCount" resultType="java.lang.Integer">
        select count(withdraw_record_id)
        from withdraw_record
        where package_name = #{pakcageName}
          and player_id = #{playerId}
          and withdraw_time between #{begin} and #{end}
    </select>

    <select id="getThisReback" resultType="java.lang.String">
        select withdraw_reback_percentage
        from behind_manage.withdraw_reback
        where #{money} between withdraw_money_min and withdraw_money_max
        order by withdraw_reback_percentage
        limit 1
    </select>

    <select id="getLimitRebackMoney" resultType="java.lang.String">
        select withdraw_money_min
        from behind_manage.withdraw_reback
        order by withdraw_money_min
        limit 1
    </select>

    <select id="getWithdrawPercentage" resultType="java.lang.String">
        select withdraw_percentage
        from behind_manage.withdraw_setting
        where package_name = (select package_name from behind_manage.application where application_id = #{gameID})
    </select>

    <select id="getWithdrawRecordByPlayerIdAndPackageName"
            resultType="com.yunting.client.DTO.VO.WithdrawVo">
        select withdraw_status, withdraw_money, player_id, withdraw_time, return_money
        from withdraw_record
        where player_id = #{playerId}
          and package_name = #{packageName}
        order by withdraw_record_id desc
    </select>

</mapper>